{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,mCAAmC;AACnC,yBAAyB;AAEzB,MAAM,UAAU;IAGZ;QACI,IAAI,CAAC,CAAC,IAAI,YAAY,UAAU,CAAC,EAAE;YAC/B,OAAO,IAAI,UAAU,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,OAAO,GAAG;YACX,OAAO,EAAE,4BAA4B;SACxC,CAAC;IACN,CAAC;IACD;;;;;OAKG;IACH,QAAQ,CAAC,MAAY,EAAE,QAA8B;QACjD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC;QAErC,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YAC9B,QAAQ,GAAG,MAAM,CAAC;YAClB,MAAM,GAAG,IAAI,CAAC;SACjB;QAED,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;aAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YACnC,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC/B;QAED,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,KAAU,EAAE,QAAa,EAAE,IAAS;YAC3D,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;gBACtC,QAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;aACvC;YACD,IAAI,KAAK,EAAE;gBACP,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;aAC1B;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAED,iBAAS,UAAU,CAAC","sourcesContent":["import * as request from 'request';\r\nimport * as qs from 'qs';\r\n\r\nclass RandomUser {\r\n    private options: { baseURL: string };\r\n\r\n    constructor() {\r\n        if (!(this instanceof RandomUser)) {\r\n            return new RandomUser();\r\n        }\r\n\r\n        this.options = {\r\n            baseURL: 'https://api.randomuser.me/'\r\n        };\r\n    }\r\n    /**\r\n     * Retrieves randomly generated users from API with optional parameters.\r\n     *\r\n     * @param {Object}    params    Optional parameters for user generation API request\r\n     * @param {Function}    callback    Callback function that will be called when the processing is done.\r\n     */\r\n    getUsers(params?: any, callback?: (body: any) => void) {\r\n        var url = this.options.baseURL + \"?\";\r\n\r\n        if (typeof params === 'function') {\r\n            callback = params;\r\n            params = null;\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('ERROR: Invalid callback function.');\r\n        } else if (typeof params === 'object') {\r\n            url += qs.stringify(params);\r\n        }\r\n\r\n        request.get(url, function (error: any, response: any, body: any) {\r\n            if (!error && response.statusCode == 200) {\r\n                callback!(JSON.parse(body).results);\r\n            }\r\n            if (error) {\r\n                throw new Error(error);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport = RandomUser;\r\n"]}