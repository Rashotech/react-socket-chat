{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  _s();\n\n  const [isTyping, setIsTyping] = useState(false);\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  const startTyping = () => {\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    setIsTyping(true);\n  };\n\n  useEffect(() => {\n    let interval;\n\n    if (isTyping) {\n      setCountdown(5);\n      interval = setInterval(() => {\n        setCountdown(c => c - 1);\n      }, 1000);\n    } else if (!isTyping || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTyping, countdown]);\n  return {\n    isTyping,\n    startTyping,\n    stopTyping\n  };\n};\n\n_s(useTyping, \"6sJ8X6nbWb5eMWKqTgeLno1qYJg=\");\n\nexport default useTyping;","map":{"version":3,"sources":["/Users/benoitpaul/dev/vitamindev/react-socket-chat/client/src/useTyping.js"],"names":["useEffect","useState","useTyping","isTyping","setIsTyping","isKeyPressed","setIsKeyPressed","countdown","setCountdown","startTyping","stopTyping","interval","setInterval","c","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,UAAU,GAAG,MAAM;AACvBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,QAAJ;;AACA,QAAIR,QAAJ,EAAc;AACZK,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAG,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BJ,QAAAA,YAAY,CAAEK,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAZ;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KALD,MAKO,IAAI,CAACV,QAAD,IAAaI,SAAS,KAAK,CAA/B,EAAkC;AACvCO,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;;AAED,WAAO,MAAMG,aAAa,CAACH,QAAD,CAA1B;AACD,GAZQ,EAYN,CAACR,QAAD,EAAWI,SAAX,CAZM,CAAT;AAcA,SAAO;AAAEJ,IAAAA,QAAF;AAAYM,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,GAAP;AACD,CA5BD;;GAAMR,S;;AA8BN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  const startTyping = () => {\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    setIsTyping(true);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (isTyping) {\n      setCountdown(5);\n      interval = setInterval(() => {\n        setCountdown((c) => c - 1);\n      }, 1000);\n    } else if (!isTyping || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTyping, countdown]);\n\n  return { isTyping, startTyping, stopTyping };\n};\n\nexport default useTyping;\n"]},"metadata":{},"sourceType":"module"}