{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  _s();\n\n  const [isTyping, setIsTyping] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n  useEffect(() => {\n    let interval;\n\n    if (isTyping) {\n      setCountdown(5);\n      interval = setInterval(() => {\n        setCountdown(c => c - 1);\n      }, 1000);\n    } else if (!isTyping || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTyping, countdown]);\n  return {\n    isTyping,\n    setIsTyping\n  };\n};\n\n_s(useTyping, \"UGU/tsWJ3+jMWHVQ+oiKS9UqhTA=\");\n\nexport default useTyping;","map":{"version":3,"sources":["/Users/benoitpaul/dev/vitamindev/react-socket-chat/client/src/useTyping.js"],"names":["useEffect","useState","useTyping","isTyping","setIsTyping","countdown","setCountdown","interval","setInterval","c","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAJ;;AACA,QAAIJ,QAAJ,EAAc;AACZG,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAC,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BF,QAAAA,YAAY,CAAEG,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAZ;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KALD,MAKO,IAAI,CAACN,QAAD,IAAaE,SAAS,KAAK,CAA/B,EAAkC;AACvCK,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD;;AAED,WAAO,MAAMG,aAAa,CAACH,QAAD,CAA1B;AACD,GAZQ,EAYN,CAACJ,QAAD,EAAWE,SAAX,CAZM,CAAT;AAcA,SAAO;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAP;AACD,CAnBD;;GAAMF,S;;AAqBN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  useEffect(() => {\n    let interval;\n    if (isTyping) {\n      setCountdown(5);\n      interval = setInterval(() => {\n        setCountdown((c) => c - 1);\n      }, 1000);\n    } else if (!isTyping || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTyping, countdown]);\n\n  return { isTyping, setIsTyping };\n};\n\nexport default useTyping;\n"]},"metadata":{},"sourceType":"module"}