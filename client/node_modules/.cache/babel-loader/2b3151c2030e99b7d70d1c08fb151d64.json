{"ast":null,"code":"\"use strict\";\n\nconst request = require(\"request\");\n\nconst qs = require(\"qs\");\n\nclass RandomUser {\n  constructor() {\n    if (!(this instanceof RandomUser)) {\n      return new RandomUser();\n    }\n\n    this.options = {\n      baseURL: 'https://api.randomuser.me/'\n    };\n  }\n  /**\r\n   * Retrieves randomly generated users from API with optional parameters.\r\n   *\r\n   * @param {Object}    params    Optional parameters for user generation API request\r\n   * @param {Function}    callback    Callback function that will be called when the processing is done.\r\n   */\n\n\n  getUsers(params, callback) {\n    var url = this.options.baseURL + \"?\";\n\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    if (typeof callback !== 'function') {\n      throw new Error('ERROR: Invalid callback function.');\n    } else if (typeof params === 'object') {\n      url += qs.stringify(params);\n    }\n\n    request.get(url, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n        callback(JSON.parse(body).results);\n      }\n\n      if (error) {\n        throw new Error(error);\n      }\n    });\n    return this;\n  }\n\n}\n\nmodule.exports = RandomUser;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,MAAM,UAAN,CAAgB;AAGZ,EAAA,WAAA,GAAA;AACI,QAAI,EAAE,gBAAgB,UAAlB,CAAJ,EAAmC;AAC/B,aAAO,IAAI,UAAJ,EAAP;AACH;;AAED,SAAK,OAAL,GAAe;AACX,MAAA,OAAO,EAAE;AADE,KAAf;AAGH;AACD;;;;;AAKG;;;AACH,EAAA,QAAQ,CAAC,MAAD,EAAe,QAAf,EAA6C;AACjD,QAAI,GAAG,GAAG,KAAK,OAAL,CAAa,OAAb,GAAuB,GAAjC;;AAEA,QAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,MAAA,QAAQ,GAAG,MAAX;AACA,MAAA,MAAM,GAAG,IAAT;AACH;;AAED,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACH,KAFD,MAEO,IAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AACnC,MAAA,GAAG,IAAI,EAAE,CAAC,SAAH,CAAa,MAAb,CAAP;AACH;;AAED,IAAA,OAAO,CAAC,GAAR,CAAY,GAAZ,EAAiB,UAAU,KAAV,EAAsB,QAAtB,EAAqC,IAArC,EAA8C;AAC3D,UAAI,CAAC,KAAD,IAAU,QAAQ,CAAC,UAAT,IAAuB,GAArC,EAA0C;AACtC,QAAA,QAAS,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,OAAlB,CAAT;AACH;;AACD,UAAI,KAAJ,EAAW;AACP,cAAM,IAAI,KAAJ,CAAU,KAAV,CAAN;AACH;AACJ,KAPD;AASA,WAAO,IAAP;AACH;;AA1CW;;AA6ChB,MAAA,CAAA,OAAA,GAAS,UAAT","sourcesContent":["import * as request from 'request';\r\nimport * as qs from 'qs';\r\n\r\nclass RandomUser {\r\n    private options: { baseURL: string };\r\n\r\n    constructor() {\r\n        if (!(this instanceof RandomUser)) {\r\n            return new RandomUser();\r\n        }\r\n\r\n        this.options = {\r\n            baseURL: 'https://api.randomuser.me/'\r\n        };\r\n    }\r\n    /**\r\n     * Retrieves randomly generated users from API with optional parameters.\r\n     *\r\n     * @param {Object}    params    Optional parameters for user generation API request\r\n     * @param {Function}    callback    Callback function that will be called when the processing is done.\r\n     */\r\n    getUsers(params?: any, callback?: (body: any) => void) {\r\n        var url = this.options.baseURL + \"?\";\r\n\r\n        if (typeof params === 'function') {\r\n            callback = params;\r\n            params = null;\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('ERROR: Invalid callback function.');\r\n        } else if (typeof params === 'object') {\r\n            url += qs.stringify(params);\r\n        }\r\n\r\n        request.get(url, function (error: any, response: any, body: any) {\r\n            if (!error && response.statusCode == 200) {\r\n                callback!(JSON.parse(body).results);\r\n            }\r\n            if (error) {\r\n                throw new Error(error);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\nexport = RandomUser;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}