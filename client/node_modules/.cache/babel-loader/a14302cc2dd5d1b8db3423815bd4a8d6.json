{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = \"http://127.0.0.1:4000\";\n\nconst useChat = roomId => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, message => {\n      const incomingMessage = { ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\n_s(useChat, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\n\nexport default useChat;","map":{"version":3,"sources":["/Users/benoitpaul/dev/vitamindev/react-socket-chat/client/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","messages","setMessages","socketRef","current","query","socket","on","console","log","id","message","incomingMessage","ownedByCurrentUser","senderId","disconnect","sendMessage","messageBody","emit","body"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,sBAAsB,GAAG,gBAA/B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,SAAS,GAAGT,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAACC,OAAV,GAAoBR,cAAc,CAACE,iBAAD,EAAoB;AACpDO,MAAAA,KAAK,EAAE;AAAEL,QAAAA;AAAF;AAD6C,KAApB,CAAlC;AAIAM,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,EAAnB,EADyB,CACD;AACzB,KAFD;AAIAP,IAAAA,SAAS,CAACC,OAAV,CAAkBG,EAAlB,CAAqBV,sBAArB,EAA8Cc,OAAD,IAAa;AACxD,YAAMC,eAAe,GAAG,EACtB,GAAGD,OADmB;AAEtBE,QAAAA,kBAAkB,EAAEF,OAAO,CAACG,QAAR,KAAqBX,SAAS,CAACC,OAAV,CAAkBM;AAFrC,OAAxB;AAIAR,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcW,eAAd,CAAf,CAAX;AACD,KAND;AAQA,WAAO,MAAM;AACXT,MAAAA,SAAS,CAACC,OAAV,CAAkBW,UAAlB;AACD,KAFD;AAGD,GApBQ,EAoBN,CAACf,MAAD,CApBM,CAAT;;AAsBA,QAAMgB,WAAW,GAAIC,WAAD,IAAiB;AACnCd,IAAAA,SAAS,CAACC,OAAV,CAAkBc,IAAlB,CAAuBrB,sBAAvB,EAA+C;AAC7CsB,MAAAA,IAAI,EAAEF,WADuC;AAE7CH,MAAAA,QAAQ,EAAEX,SAAS,CAACC,OAAV,CAAkBM;AAFiB,KAA/C;AAID,GALD;;AAOA,SAAO;AAAET,IAAAA,QAAF;AAAYe,IAAAA;AAAZ,GAAP;AACD,CAlCD;;GAAMjB,O;;AAoCN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = \"http://127.0.0.1:4000\";\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}